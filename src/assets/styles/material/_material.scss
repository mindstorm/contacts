// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;

// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core;

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$contacts-primary: mat.define-palette(mat.$indigo-palette);
/* stylelint-disable-next-line value-keyword-case */
$contacts-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$contacts-warn: mat.define-palette(mat.$red-palette);

// Define typography settings
$contacts-typography: mat.define-typography-config(
  $font-family: '"Open Sans", sans-serif',
);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$contacts-theme: mat.define-light-theme(
  (
    color: (
      primary: $contacts-primary,
      accent: $contacts-accent,
      warn: $contacts-warn,
    ),
    typography: $contacts-typography,
  )
);

// Emit theme-dependent styles for common features used across multiple components.
@include mat.core-theme($contacts-theme);

// Emit styles for MatButton based on `$my-theme`. Because the configuration
// passed to `define-light-theme` omits typography, `button-theme` will not
// emit any typography styles.
@include mat.button-theme($contacts-theme);
@include mat.dialog-theme($contacts-theme);
@include mat.form-field-theme($contacts-theme);
@include mat.input-theme($contacts-theme);
